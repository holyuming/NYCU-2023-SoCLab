<pragmas>
<pragma file="hls_FIRN11MAXI/FIR.cpp" line="10" pragmaType="interface" parentfunction="fir_n11_maxi" mode="s_axilite" port="regXferLeng" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_FIRN11MAXI/FIR.cpp" line="6" pragmaType="interface" parentfunction="fir_n11_maxi" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls_FIRN11MAXI/FIR.cpp" line="7" pragmaType="interface" parentfunction="fir_n11_maxi" mode="m_axi" port="pn32HPInput" bundle="" offset="slave" name="" depth="600" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="hls_FIRN11MAXI/FIR.cpp" line="8" pragmaType="interface" parentfunction="fir_n11_maxi" mode="m_axi" port="pn32HPOutput" bundle="" offset="slave" name="" depth="600" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="hls_FIRN11MAXI/FIR.cpp" line="9" pragmaType="interface" parentfunction="fir_n11_maxi" mode="s_axilite" port="an32Coef" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="567" pragmaType="inline" parentfunction="_ZN8ssdm_intILi65ELb0EEC2EDq65_j" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="1682" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)64, false>::plus operator+<32, false>(ap_int_base<32, false> const&, unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="1682" pragmaType="inline" parentfunction="ap_int_base<65, false>::RType<($_0)64, false>::div operator/<65, false>(ap_int_base<65, false> const&, unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="587" pragmaType="inline" parentfunction="ap_int_base<65, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="263" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="1559" pragmaType="inline" parentfunction="ap_int_base<65, false>::RType<64, false>::div operator/<65, false, 64, false>(ap_int_base<65, false> const&, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h" line="300" pragmaType="inline" parentfunction="ap_uint<65>::ap_uint<65, false>(ap_int_base<65, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="567" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<64, false>::plus operator+<32, false, 64, false>(ap_int_base<32, false> const&, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
</pragmas>
