Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2022.1 (lin64) Build 3526262 Mon Apr 18 15:47:01 MDT 2022
| Date         : Sat Sep 30 03:15:01 2023
| Host         : ubuntu2004 running 64-bit Ubuntu 20.04.4 LTS
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xck26-sfvc784-2LV-c
| Speed File   : -2LV
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 54
+-----------+----------+--------------------------------------+------------+
| Rule      | Severity | Description                          | Violations |
+-----------+----------+--------------------------------------+------------+
| DPOP-3    | Warning  | PREG Output pipelining               | 19         |
| DPOP-4    | Warning  | MREG Output pipelining               | 33         |
| REQP-1935 | Warning  | RAMB36E2_nochange_collision_advisory | 2          |
+-----------+----------+--------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPOP-3#1 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__1 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__1 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#13 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__1 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#14 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#15 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#16 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#17 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#18 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__1 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#19 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout__0 output design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U10/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__1 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U11/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__1 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__1 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#19 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#20 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#21 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#22 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#23 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#24 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__1 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U8/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#25 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#26 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout__0 multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_32s_32s_32_1_1_U9/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#27 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_2_reg_585_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_2_reg_585_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#28 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_3_reg_595_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_3_reg_595_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#29 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_5_reg_615_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_5_reg_615_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#30 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_6_reg_625_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_6_reg_625_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#31 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_8_reg_645_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_8_reg_645_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#32 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_9_reg_690_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_9_reg_690_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#33 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_reg_565_reg multiplier stage design_1_i/fir_n11_strm_0/inst/grp_fir_n11_strm_Pipeline_XFER_LOOP_fu_112/mul_ln35_reg_565_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1935#1 Warning
RAMB36E2_nochange_collision_advisory  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_in_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-1935#2 Warning
RAMB36E2_nochange_collision_advisory  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_out_1/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>


